package p2292;

import java.util.Scanner;

/**
 * 백준 2292번 - 벌집  
 * https://www.acmicpc.net/problem/2292
 * 
 * 난이도: Bronze II
 * 분류: 수학, 구현
 * 
 * 프로그래밍 기초 개념:
 * 1. 패턴 인식과 규칙성 찾기
 * 2. while 반복문과 조건 검사
 * 3. 수열과 누적합 계산
 * 4. 기하학적 구조 이해
 * 
 * 수학 개념:
 * - 육각형 벌집 구조에서의 층별 방 개수
 * - 등차수열: 각 층의 방 개수가 6씩 증가 (6, 12, 18, ...)
 * - 층별 마지막 방 번호: 1, 7, 19, 37, 61, ...
 * - 중앙에서 특정 방까지의 최단 거리
 * 
 * 초보자를 위한 팁:
 * - 벌집을 여러 개의 동심원(층)으로 나누어 생각해보세요
 * - 각 층마다 6의 배수만큼 방이 추가됩니다
 * - 그림을 그려서 패턴을 확인해보는 것이 중요합니다!
 */
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt(); // 목표 방 번호
        
        // 1번 방은 중앙에 있으므로 거리가 1
        if (N == 1) {
            System.out.println(1);
            sc.close();
            return;
        }
        
        int layer = 1;           // 현재 층 번호 (1번 방을 1층으로 시작)
        int maxRoomInLayer = 1;  // 현재 층의 마지막 방 번호
        
        // N번 방이 어느 층에 있는지 찾기
        while (maxRoomInLayer < N) {
            layer++;             // 다음 층으로 이동
            maxRoomInLayer += 6 * (layer - 1); // 이번 층의 마지막 방 번호 계산
            // layer번째 층에는 6 * (layer-1)개의 방이 있음
        }
        
        System.out.println(layer); // 층 번호가 곧 최단 거리
        
        sc.close();
    }
}

/*
 * 학습 가이드:
 * 
 * 1. 벌집 구조 이해
 *    육각형 벌집을 층별로 나누면:
 *    
 *         19  20  21
 *      18   7   8   9  22
 *   17   6   1   2  10  23
 *      16   5   4   3  11
 *         15  14  13  12
 *    
 *    - 1층: 1번 방 (1개)
 *    - 2층: 2~7번 방 (6개)  
 *    - 3층: 8~19번 방 (12개)
 *    - 4층: 20~37번 방 (18개)
 *    - n층: 6×(n-1)개 방 (n≥2)
 * 
 * 2. 각 층의 방 개수 패턴
 *    - 1층: 1개
 *    - 2층: 6개 = 6×1
 *    - 3층: 12개 = 6×2  
 *    - 4층: 18개 = 6×3
 *    - n층: 6×(n-1)개 (n≥2)
 * 
 * 3. 각 층의 마지막 방 번호
 *    - 1층 마지막: 1
 *    - 2층 마지막: 1 + 6 = 7
 *    - 3층 마지막: 7 + 12 = 19  
 *    - 4층 마지막: 19 + 18 = 37
 *    - n층 마지막: 3n² - 3n + 1 (공식)
 * 
 * 4. 최단 거리의 의미
 *    - 1번 방에서 N번 방까지 지나야 하는 방의 개수
 *    - 벌집 구조에서는 층 번호가 곧 최단 거리
 *    - 예: 19번 방은 3층에 있으므로 거리는 3
 * 
 * 5. 알고리즘 동작 과정
 *    예시: N = 13을 찾는 경우
 *    - layer=1, maxRoom=1: 13 > 1 이므로 계속
 *    - layer=2, maxRoom=1+6=7: 13 > 7 이므로 계속  
 *    - layer=3, maxRoom=7+12=19: 13 ≤ 19 이므로 종료
 *    - 결과: 3층, 거리 3
 * 
 * 6. 다른 접근 방법
 *    수학 공식 직접 활용:
 *    n층 마지막 방 번호 = 3n² - 3n + 1
 *    이 식이 N 이상이 되는 최소 n을 찾기
 *    
 *    하지만 반복문이 더 직관적이고 이해하기 쉬움
 * 
 * 7. 실습해보기
 *    - N=1: 1층, 거리 1
 *    - N=2~7: 2층, 거리 2
 *    - N=8~19: 3층, 거리 3  
 *    - N=20~37: 4층, 거리 4
 * 
 * 8. 실생활 응용
 *    - 게임에서의 육각형 타일 맵
 *    - 화학에서의 벤젠 고리 구조
 *    - 통신망에서의 허니콤 구조
 *    - 최적 경로 탐색 알고리즘
 * 
 * 9. 시간복잡도
 *    - O(√N): N이 속한 층을 찾는데 필요한 시간
 *    - 각 층의 크기가 선형적으로 증가하므로
 */