package p4153;

import java.util.Arrays;
import java.util.Scanner;

/**
 * 백준 4153번 - 직각삼각형
 * https://www.acmicpc.net/problem/4153
 * 
 * 난이도: Bronze III
 * 분류: 수학, 기하학, 피타고라스 정리
 * 
 * 프로그래밍 기초 개념:
 * 1. 반복문 (while) - 여러 테스트 케이스 처리
 * 2. 조건문 (if) - 조건에 따른 분기 처리
 * 3. 배열 (Array) - 여러 값을 저장하고 정렬
 * 4. 수학적 공식 구현 - 피타고라스 정리
 * 
 * 수학 개념:
 * - 피타고라스 정리: a² + b² = c² (c는 빗변, 가장 긴 변)
 * - 직각삼각형에서만 이 공식이 성립합니다
 * - 세 변의 길이로 직각삼각형인지 판단할 수 있습니다
 * 
 * 초보자를 위한 팁:
 * - 피타고라스 정리는 직각삼각형의 가장 중요한 성질입니다
 * - 가장 긴 변을 찾아서 빗변으로 사용해야 합니다
 * - 0 0 0이 입력되면 프로그램을 종료합니다
 */
public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        // 여러 테스트 케이스를 처리하는 무한 루프
        while (true) {
            // 세 변의 길이를 입력받습니다
            int a = sc.nextInt();
            int b = sc.nextInt(); 
            int c = sc.nextInt();
            
            // 종료 조건: 0 0 0이 입력되면 프로그램 종료
            if (a == 0 && b == 0 && c == 0) {
                break;
            }
            
            // 세 변을 배열에 저장하고 정렬
            // 정렬 후 가장 큰 값이 빗변 후보가 됩니다
            int[] sides = {a, b, c};
            Arrays.sort(sides);  // 오름차순 정렬
            
            // 정렬된 배열에서 sides[2]가 가장 긴 변(빗변 후보)
            int side1 = sides[0];  // 가장 짧은 변
            int side2 = sides[1];  // 중간 길이 변  
            int hypotenuse = sides[2];  // 가장 긴 변 (빗변 후보)
            
            // 피타고라스 정리 확인: a² + b² = c²
            // 정수의 제곱이므로 실수 계산 오차 걱정 없음
            if (side1 * side1 + side2 * side2 == hypotenuse * hypotenuse) {
                System.out.println("right");  // 직각삼각형
            } else {
                System.out.println("wrong");  // 직각삼각형 아님
            }
        }
        
        sc.close();
    }
}

/*
 * 학습 가이드:
 * 
 * 1. 피타고라스 정리 이해
 *    - 직각삼각형에서 빗변의 제곱 = 두 직각변의 제곱의 합
 *    - 예: 3, 4, 5 삼각형 → 3² + 4² = 9 + 16 = 25 = 5²
 *    - 유명한 피타고라스 수: (3,4,5), (5,12,13), (8,15,17) 등
 * 
 * 2. 배열과 정렬 활용
 *    - 세 변 중 어느 것이 빗변인지 미리 알 수 없음
 *    - Arrays.sort()로 정렬하면 가장 큰 값이 마지막에 위치
 *    - 가장 큰 변이 빗변이어야 피타고라스 정리가 성립
 * 
 * 3. while 반복문
 *    - while(true): 무한 반복
 *    - break: 반복문 탈출
 *    - 여러 테스트 케이스를 처리할 때 유용한 패턴
 * 
 * 4. 입력 형태 이해
 *    - 한 줄에 세 개의 정수
 *    - 0 0 0이 나올 때까지 반복
 *    - EOF(End of File) 처리와 다른 종료 조건
 * 
 * 5. 실습해보기
 *    직각삼각형: 3 4 5, 5 12 13, 8 15 17, 6 8 10
 *    일반삼각형: 1 2 3, 2 3 4, 5 5 5
 *    
 * 6. 주의사항
 *    - 빗변은 항상 가장 긴 변이어야 함
 *    - 정수 계산이므로 실수 오차 걱정 없음
 *    - 0으로만 이루어진 입력은 삼각형이 아니므로 종료 조건
 * 
 * 7. 수학적 확장
 *    - 일반화된 피타고라스 정리 (코사인 법칙)
 *    - 3차원에서의 거리 계산
 *    - 복소수 평면에서의 거리
 * 
 * 8. 다른 해결 방법
 *    if-else를 이용해 세 경우를 직접 확인:
 *    if (a*a + b*b == c*c || a*a + c*c == b*b || b*b + c*c == a*a)
 *    하지만 정렬을 사용하는 방법이 더 깔끔합니다.
 */